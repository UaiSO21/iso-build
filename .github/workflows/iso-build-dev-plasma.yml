name: ISO Build Dev PLASMA

on:
  # repository_dispatch:
    # types:
    #   - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: archlinux:latest
      options: --privileged
      
    strategy:
      matrix:
        BRANCH: [dev]

    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        shell: bash -O extglob {0}
        run: |
          pacman-key --init
          
          # #add BigLinux key
          # pacman-key -r 45EC44879815E2A6
          # pacman-key --lsign-key 45EC44879815E2A6
          
          # echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          
          # #add UaiSO21 key
          # pacman-key -r FB39C5D54771F074
          # pacman-key --lsign-key FB39C5D54771F074
          
          # echo '
          # [uaiso21-dev]
          # SigLevel = PackageRequired
          # Server = http://repo-uaiso.uai21.com/dev/$arch' | tee -a /etc/pacman.conf
          
          pacman -Syu --noconfirm --needed archiso sudo nano openssh rsync
          pacman -Scc --noconfirm
          
          # cp archiso/pacman.conf /etc/pacman.conf
      
      - name: ISO Build
        uses: UaiSO21/iso-build@main
        with:
          branch: ${{ matrix.branch }}
          iso-profile: 'https://github.com/UaiSO21/uaiso-iso-profile-plasma'
          
      - name: Push to Repo
        shell: bash
        run: |
          echo "## ssh setup ##"
          mkdir -p /home/runner/.ssh
          touch /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa
          # ssh-agent -a /tmp/ssh_agent.sock > /dev/null
          echo "${{ secrets.REPO_SSH_KEY }}" >> /home/runner/.ssh/id_rsa
          eval `ssh-agent -s`
          ssh-add /home/runner/.ssh/id_rsa
          ssh-keyscan -t rsa -p ${{ secrets.REPO_PORT }} ${{ secrets.REPO_HOST }} >> /home/runner/.ssh/known_hosts
          
          cd out
          ls -lh
          
          for i in *.iso *.md5; do
            rsync -vapzO -e "ssh -o StrictHostKeyChecking=no -p ${{ secrets.REPO_PORT }}" $i ${{ secrets.REPO_USER }}@${{ secrets.REPO_HOST }}:${{ secrets.REPO_DIR_ISO }}
          done
          
      # # # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      
      - name: Telegram Alert Success
        shell: bash -O extglob {0}
        run: |
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "ISO: ${{ github.workflow }} Criada com Sucesso.", "disable_notification": "true", "message_thread_id": "6"}' ${{ secrets.MESSAGE_BOT_KEY }}
          
      - name: Telegram Alerta Fail
        # if: ${{ failure() || cancelled() }}
        if: ${{ failure() }}
        run: |
          #echo ${{ github.token }} | gh auth login --with-token
          #gh release delete ${{ needs.prepare-release.outputs.release_tag }} -y --repo ${{ github.repository }}
          
          curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "${{ secrets.CHAT_ID }}", "text": "Falha ao gerar ISO  ${{ github.workflow }} link https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}", "disable_notification": "false", "disable_web_page_preview": "true" "message_thread_id": "6"}' ${{ secrets.MESSAGE_BOT_KEY }}
